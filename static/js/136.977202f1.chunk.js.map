{"version":3,"file":"static/js/136.977202f1.chunk.js","mappings":"mUAEaA,E,QAAWC,GAAAA,GAAH,kO,SCyCrB,EAtCa,WACX,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KAaA,OAXAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,WAAMN,GAAN,iGAEMO,EAAAA,EAAAA,IAAQP,GAFd,OAEXQ,EAFW,OAGjBJ,EAAQI,EAASL,MAHA,gDAKjBM,QAAQC,IAAR,MALiB,yDAAH,sDAQlBJ,EAAaN,EACd,GAAE,CAACA,IAEFG,IACE,0BACE,SAACL,EAAD,UACGK,EAAKQ,KAAI,SAAAC,GAAK,OACb,2BACE,gBACEC,IACED,EAAME,aAAN,0CACuCF,EAAME,cACzCC,EAENC,IAAKJ,EAAMK,QAEb,uBAAIL,EAAMK,QACV,yBAAG,cAAYL,EAAMM,eAVdN,EAAMO,GADF,OAkBxB,C,mMCxCKC,EAAW,+BACXC,EAAU,mCAEHC,EAAW,mCAAG,oGACFC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,uCACqBC,IAFnB,cACnBb,EADmB,yBAIlBA,EAASgB,KAAKC,SAJI,2CAAH,qDAMXC,EAAe,mCAAG,WAAMC,GAAN,uFACNJ,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iCACeC,EADf,yBACuCM,IAFjC,cACvBnB,EADuB,yBAItBA,EAASgB,KAAKC,SAJQ,2CAAH,sDAMfG,EAAY,mCAAG,WAAMT,GAAN,uFACHI,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAD,EADA,oBACcE,IAFX,cACpBb,EADoB,yBAInBA,EAASgB,MAJU,2CAAH,sDAMZjB,EAAO,mCAAG,WAAMY,GAAN,uFACEI,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAD,EADA,4BACsBE,IAFxB,cACfb,EADe,yBAIdA,EAASgB,MAJK,2CAAH,sDAMPK,EAAU,mCAAG,WAAMV,GAAN,uFACDI,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAD,EADA,4BACsBE,IAFrB,cAClBb,EADkB,yBAIjBA,EAASgB,MAJQ,2CAAH,qD","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","servicies/getMovies.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: flex;\n  gap: 30px;\n  flex-wrap: wrap;\n  list-style: none;\n  margin-left: 0;\n  padding: 0;\n\n  > li {\n    flex-grow: 1;\n    width: 160px;\n  }\n  > li > img {\n    width: 160px;\n  }\n`;\n","import { useParams } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\nimport { getCast } from 'servicies/getMovies';\nimport defaultActor from 'images/defaultActor.png';\nimport { CastList } from './Cast.styled';\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(null);\n  // const location = useLocation();\n  useEffect(() => {\n    const getMovieCast = async movieId => {\n      try {\n        const response = await getCast(movieId);\n        setCast(response.cast);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getMovieCast(movieId);\n  }, [movieId]);\n  return (\n    cast && (\n      <div>\n        <CastList>\n          {cast.map(actor => (\n            <li key={actor.id}>\n              <img\n                src={\n                  actor.profile_path\n                    ? `https://image.tmdb.org/t/p/w500/${actor.profile_path}`\n                    : defaultActor\n                }\n                alt={actor.name}\n              ></img>\n              <p>{actor.name}</p>\n              <p>Character: {actor.character}</p>\n            </li>\n          ))}\n        </CastList>\n      </div>\n    )\n  );\n};\nexport default Cast;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '63ec23fa1dc23aee040ba1524163629a';\n\nexport const getTrending = async () => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\nexport const getMoviesByName = async query => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&page=1&query=${query}`\n  );\n  return response.data.results;\n};\nexport const getMovieById = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}`\n  );\n  return response.data;\n};\nexport const getCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`\n  );\n  return response.data;\n};\nexport const getReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n"],"names":["CastList","styled","movieId","useParams","useState","cast","setCast","useEffect","getMovieCast","getCast","response","console","log","map","actor","src","profile_path","defaultActor","alt","name","character","id","BASE_URL","API_KEY","getTrending","axios","data","results","getMoviesByName","query","getMovieById","getReviews"],"sourceRoot":""}