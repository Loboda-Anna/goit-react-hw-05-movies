{"version":3,"file":"static/js/134.170d0446.chunk.js","mappings":"gOAIMA,GAAaC,EAAAA,EAAAA,OAAK,kBAAM,6BAAN,IAClBC,GAAYD,EAAAA,EAAAA,OAAK,kBAAM,6BAAN,IAgCvB,UA9Be,WAAO,IAAD,EACnB,GAA4BE,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAoB3C,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,mCAAG,WAAMC,GAAN,iGAEKC,EAAAA,EAAAA,IAAgBL,GAFrB,QAEZM,EAFY,QAGLC,OAAS,GACpBX,EAAUU,GAJM,gDAOlBE,QAAQC,IAAR,MAPkB,yDAAH,sDAUnBN,EAAcH,EACf,GAAE,CAACA,KAEF,4BACE,SAACP,EAAD,CAAWiB,SApBW,SAAAV,GAExBD,EAD6B,KAAVC,EAAe,CAAEA,MAAAA,GAAU,CAAC,EAEhD,IAkBIL,IAAU,SAACJ,EAAD,CAAYI,OAAQA,MAGpC,C,mMClCKgB,EAAW,+BACXC,EAAU,mCAEHC,EAAW,mCAAG,oGACFC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,uCACqBC,IAFnB,cACnBN,EADmB,yBAIlBA,EAASS,KAAKC,SAJI,2CAAH,qDAMXX,EAAe,mCAAG,WAAML,GAAN,uFACNc,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iCACeC,EADf,yBACuCZ,IAFjC,cACvBM,EADuB,yBAItBA,EAASS,KAAKC,SAJQ,2CAAH,sDAMfC,EAAY,mCAAG,WAAMC,GAAN,uFACHJ,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAO,EADA,oBACcN,IAFX,cACpBN,EADoB,yBAInBA,EAASS,MAJU,2CAAH,sDAMZI,EAAO,mCAAG,WAAMD,GAAN,uFACEJ,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAO,EADA,4BACsBN,IAFxB,cACfN,EADe,yBAIdA,EAASS,MAJK,2CAAH,sDAMPK,EAAU,mCAAG,WAAMF,GAAN,uFACDJ,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAO,EADA,4BACsBN,IAFrB,cAClBN,EADkB,yBAIjBA,EAASS,MAJQ,2CAAH,qD","sources":["pages/Movies.jsx","servicies/getMovies.js"],"sourcesContent":["import React, { useState, useEffect, lazy } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMoviesByName } from 'servicies/getMovies';\n\nconst MoviesList = lazy(() => import('components/MoviesList'));\nconst SearchBar = lazy(() => import('components/SearchBar'));\n\nconst Movies = () => {\n  const [movies, setMovies] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  const updateQueryString = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  useEffect(() => {\n    const getMoviesList = async searchQuery => {\n      try {\n        const response = await getMoviesByName(query);\n        if (response.length > 0) {\n          setMovies(response);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getMoviesList(query);\n  }, [query]);\n  return (\n    <div>\n      <SearchBar onSubmit={updateQueryString} />\n      {movies && <MoviesList movies={movies} />}\n    </div>\n  );\n};\nexport default Movies;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '63ec23fa1dc23aee040ba1524163629a';\n\nexport const getTrending = async () => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\nexport const getMoviesByName = async query => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&page=1&query=${query}`\n  );\n  return response.data.results;\n};\nexport const getMovieById = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}`\n  );\n  return response.data;\n};\nexport const getCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`\n  );\n  return response.data;\n};\nexport const getReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n"],"names":["MoviesList","lazy","SearchBar","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","query","get","useEffect","getMoviesList","searchQuery","getMoviesByName","response","length","console","log","onSubmit","BASE_URL","API_KEY","getTrending","axios","data","results","getMovieById","id","getCast","getReviews"],"sourceRoot":""}