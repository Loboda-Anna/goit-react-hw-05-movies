{"version":3,"file":"static/js/681.9b248cee.chunk.js","mappings":"8OAwCA,UAnCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,WAAMN,GAAN,iGAEGO,EAAAA,EAAAA,IAAWP,GAFd,QAEdQ,EAFc,QAGPC,SACXL,EAAWI,EAASC,SAJF,gDAOpBC,QAAQC,IAAR,MAPoB,yDAAH,sDAUrBL,EAAgBN,EACjB,GAAE,CAACA,IACJU,QAAQC,IAAIR,IAEV,yBACGA,GACC,wBACGA,EAAQS,KAAI,SAAAC,GAAM,OACjB,2BACE,yBAAG,WAASA,EAAOC,WACnB,uBAAID,EAAOE,YAFJF,EAAOG,GADC,OAQrB,SAAC,UAAD,KAIP,C,mDClCD,UAHiB,WACf,OAAO,yBAAK,aACb,C,mMCFKC,EAAW,+BACXC,EAAU,mCAEHC,EAAW,mCAAG,oGACFC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,uCACqBC,IAFnB,cACnBV,EADmB,yBAIlBA,EAASa,KAAKZ,SAJI,2CAAH,qDAMXa,EAAe,mCAAG,WAAMC,GAAN,uFACNH,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iCACeC,EADf,yBACuCK,IAFjC,cACvBf,EADuB,yBAItBA,EAASa,KAAKZ,SAJQ,2CAAH,sDAMfe,EAAY,mCAAG,WAAMR,GAAN,uFACHI,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAD,EADA,oBACcE,IAFX,cACpBV,EADoB,yBAInBA,EAASa,MAJU,2CAAH,sDAMZI,EAAO,mCAAG,WAAMT,GAAN,uFACEI,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAD,EADA,4BACsBE,IAFxB,cACfV,EADe,yBAIdA,EAASa,MAJK,2CAAH,sDAMPd,EAAU,mCAAG,WAAMS,GAAN,uFACDI,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAD,EADA,4BACsBE,IAFrB,cAClBV,EADkB,yBAIjBA,EAASa,MAJQ,2CAAH,qD","sources":["components/Reviews.jsx","pages/NotFound.jsx","servicies/getMovies.js"],"sourcesContent":["import NotFound from 'pages/NotFound';\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from 'servicies/getMovies';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    const getMovieReviews = async movieId => {\n      try {\n        const response = await getReviews(movieId);\n        if (response.results) {\n          setReviews(response.results);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getMovieReviews(movieId);\n  }, [movieId]);\n  console.log(reviews);\n  return (\n    <div>\n      {reviews ? (\n        <ul>\n          {reviews.map(review => (\n            <li key={review.id}>\n              <p>Author: {review.author}</p>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <NotFound />\n      )}\n    </div>\n  );\n};\nexport default Reviews;\n\n","import React from 'react';\n\nconst NotFound = () => {\n  return <div>Not Found</div>;\n};\nexport default NotFound;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '63ec23fa1dc23aee040ba1524163629a';\n\nexport const getTrending = async () => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\nexport const getMoviesByName = async query => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&page=1&query=${query}`\n  );\n  return response.data.results;\n};\nexport const getMovieById = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}`\n  );\n  return response.data;\n};\nexport const getCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`\n  );\n  return response.data;\n};\nexport const getReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","getMovieReviews","getReviews","response","results","console","log","map","review","author","content","id","BASE_URL","API_KEY","getTrending","axios","data","getMoviesByName","query","getMovieById","getCast"],"sourceRoot":""}