{"version":3,"file":"static/js/430.94b3517a.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetails.jsx","components/Reviews.jsx","servicies/getMovies.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: flex;\n  gap: 30px;\n  flex-wrap: wrap;\n  list-style: none;\n  margin-left: 0;\n  padding: 0;\n\n  > li {\n    flex-grow: 1;\n    width: 160px;\n  }\n  > li > img {\n    width: 160px;\n  }\n`;\n","import { useParams } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\nimport { getCast } from 'servicies/getMovies';\nimport defaultActor from 'images/defaultActor.png';\nimport { CastList } from './Cast.styled';\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(null);\n  // const location = useLocation();\n  useEffect(() => {\n    const getMovieCast = async movieId => {\n      try {\n        const response = await getCast(movieId);\n        setCast(response.cast);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getMovieCast(movieId);\n  }, [movieId]);\n  return (\n    cast && (\n      <div>\n        <CastList>\n          {cast.map(actor => (\n            <li key={actor.id}>\n              <img\n                src={\n                  actor.profile_path\n                    ? `https://image.tmdb.org/t/p/w500/${actor.profile_path}`\n                    : defaultActor\n                }\n                alt={actor.name}\n              ></img>\n              <p>{actor.name}</p>\n              <p>Character: {actor.character}</p>\n            </li>\n          ))}\n        </CastList>\n      </div>\n    )\n  );\n};\nexport default Cast;\n","import styled from 'styled-components';\n\nexport const BackBtn = styled.button`\n  align-items: center;\n  margin-bottom: 30px;\n  background-color: #fff;\n  border-radius: 24px;\n  border-style: none;\n  box-shadow: rgba(0, 0, 0, 0.2) 0 3px 5px -1px,\n    rgba(0, 0, 0, 0.14) 0 6px 10px 0, rgba(0, 0, 0, 0.12) 0 1px 18px 0;\n  box-sizing: border-box;\n  cursor: pointer;\n  display: inline-flex;\n  font-size: 14px;\n  font-weight: 500;\n  height: 32px;\n  justify-content: center;\n  letter-spacing: 0.25px;\n  line-height: normal;\n  max-width: 100%;\n  padding: 2px 24px;\n  text-align: center;\n`;\nexport const MovieCard = styled.article`\n  display: flex;\n  gap: 30px;\n  > img {\n    width: 30%;\n  }\n`;\nexport const AdditionalInfo = styled.div`\n  > div {\n    display: flex;\n    gap: 30px;\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Link, Outlet, useLocation } from 'react-router-dom';\nimport { getMovieById } from 'servicies/getMovies';\nimport Cast from '../Cast/Cast';\nimport Reviews from '../Reviews';\nimport defaultPoster from 'images/defaultPoster.jpg';\nimport { BackBtn, MovieCard, AdditionalInfo } from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n  useEffect(() => {\n    const getMovie = async movieId => {\n      try {\n        const response = await getMovieById(movieId);\n        setMovie(response);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getMovie(movieId);\n  }, [movieId]);\n\n  return (\n    <main>\n      <BackBtn>\n        <Link to={backLinkHref}>Go back</Link>\n      </BackBtn>\n      {movie && (\n        <div>\n          <MovieCard>\n            <img\n              src={\n                movie.poster_path\n                  ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\n                  : defaultPoster\n              }\n              alt={movie.title}\n            />\n\n            <div>\n              <h2>{`${movie.title} (${movie.release_date.slice(0, 4)})`}</h2>\n              <p>{`User Score: ${movie.vote_average}`}</p>\n              <h3>Overview</h3>\n              <p>{`${movie.overview}`}</p>\n              <h3>Genres</h3>\n              <ul>\n                {movie.genres.map(genre => (\n                  <li key={genre.name}>{genre.name}</li>\n                ))}\n              </ul>\n            </div>\n          </MovieCard>\n          <AdditionalInfo>\n            <h2>Additional Information</h2>\n            <div>\n              <Link\n                to={`/movies/${movieId}/cast`}\n                element={<Cast />}\n                state={location.state}\n              >\n                Cast\n              </Link>\n              <Link\n                to={`/movies/${movieId}/reviews`}\n                element={<Reviews />}\n                state={location.state}\n              >\n                Reviews\n              </Link>\n            </div>\n          </AdditionalInfo>\n        </div>\n      )}\n\n      <Outlet />\n    </main>\n  );\n};\nexport default MovieDetails;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from 'servicies/getMovies';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    const getMovieReviews = async movieId => {\n      try {\n        const response = await getReviews(movieId);\n        if (response.results) {\n          setReviews(response.results);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getMovieReviews(movieId);\n  }, [movieId]);\n  console.log(reviews);\n  return (\n    reviews && (\n      <div>\n        <ul>\n          {reviews.map(review => (\n            <li key={review.id}>\n              <p>Author: {review.author}</p>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      </div>\n    )\n  );\n};\nexport default Reviews;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '63ec23fa1dc23aee040ba1524163629a';\n\nexport const getTrending = async () => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\nexport const getMoviesByName = async query => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&page=1&query=${query}`\n  );\n  return response.data.results;\n};\nexport const getMovieById = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}`\n  );\n  return response.data;\n};\nexport const getCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`\n  );\n  return response.data;\n};\nexport const getReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n"],"names":["CastList","styled","movieId","useParams","useState","cast","setCast","useEffect","getMovieCast","getCast","response","console","log","map","actor","src","profile_path","defaultActor","alt","name","character","id","BackBtn","MovieCard","AdditionalInfo","movie","setMovie","location","useLocation","backLinkHref","state","from","getMovie","getMovieById","to","poster_path","defaultPoster","title","release_date","slice","vote_average","overview","genres","genre","element","Cast","Reviews","reviews","setReviews","getMovieReviews","getReviews","results","review","author","content","BASE_URL","API_KEY","getTrending","axios","data","getMoviesByName","query"],"sourceRoot":""}